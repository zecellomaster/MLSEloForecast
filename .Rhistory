sum(make_playoffs)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Make_Playoffs <- round(make_playoffs/num_sims,1)
season_odds$Make_Playoffs <- round(make_playoffs/num_sim,1)
west_order[,"Seed"] <- seq(1:7)
c(west_order,seq(1:7))
cbind(west_order,seq(1:7))
cbind(west_order[1:7],seq(1:7))
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Make_Playoffs <- round(make_playoffs/num_sim,2)
season_odds$Make_Playoffs <- round(make_playoffs/num_sim,3)
make_playoffs
View(avg_stats)
View(comp_standings)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
View(elo_history[[1]])
years <- elo_history[[i]][marks[1]:marks[2],"Year"]
years <- elo_history[[1]][marks[1]:marks[2],"Year"]
c(1,2,3,4,5) * c(1,2,3,4,5)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
adjusted_weight <- elo_history[[i]][marks[1]:marks[2],"Weight"] * adjust
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(team_regs)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Win_Shield <- win_shield/num_sim
vs = matrix(c(2,7,3,6,4,5), nrow = 2, ncol = 2)
View(vs)
vs = matrix(c(2,7,3,6,4,5), nrow = 3, ncol = 2)
vs = matrix(c(2,3,4,5,6,7), nrow = 3, ncol = 2)
vs = matrix(c(2,7,3,6,4,5), nrow = 2, ncol = 3)
west_seeds <- cbind(west_order[1:7],seq(1:7))
View(west_seeds)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
adjust
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
adjust
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(future_reg_tally/num_sim)
View(future_post_tally)
View(reg_results)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(future_reg_tally/num_sim)
View(current_elo)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(future_reg_tally/num_sim)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(future_reg_tally/num_sim)
game_odds <- future_reg_tally/num_sim
View(game_odds)
season_odds$Win_Shield <- win_shield/num_sim
season_odds <- data.frame()#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
season_odds$Avg_Points <- avg_stats[,"Points"]
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds <- comp_standings$Alt_Names#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
season_odds <- comp_standings$Alt_Names#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
comp_standings <- read.csv(con_format,header = TRUE, fileEncoding="UTF-8-BOM")
season_odds <- ref_names$Alt_Names#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
ref_names <- filter(teams[,c("Alt_Names","Team_Name")],Alt_Names != "N/A")
season_odds <- ref_names$Alt_Names#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
teams <-  read.csv(name_location,header = TRUE, fileEncoding="UTF-8-BOM")
teams <- filter(teams, teams$Alt_Names != "N/A")
ref_names <- filter(teams[,c("Alt_Names","Team_Name")],Alt_Names != "N/A")
season_odds <- ref_names$Alt_Names#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds <- ref_names[,"Alt_Names"]#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
season_odds <- data.frame(ref_names$Alt_Names)#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
View(season_odds)
season_odds <- data.frame(Alt_Names = ref_names$Alt_Names)#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Win_Shield <- win_shield/num_sim
season_odds$Elo <- current_elo$Elo
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Elo <- current_elo$Elo
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
current_elo <- read.csv(elo_loc,header = TRUE) #, row.names = 1)
View(current_elo)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(current_elo)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
Q
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Win_Shield <- round(win_shield/num_sim,3)
game_odds <- future_reg_tally/num_sim
View(game_odds)
View(future_reg_games)
max(game_odds$Away_Wins)
max(game_odds[,"Away_Wins"])
make_playoffs
length(c(2,7,3,6,4,5))
vs <- matrix(c(2,7,3,6,4,5), nrow = 2, ncol = 3)
View(vs)
View(current_elo)
View(reg_tally)
View(west_seeds)
runif(1, min = 0 , max = ``)
runif(1, min = 0 , max = 1)
runif(1, min = 0 , max = 1)
runif(1, min = 0 , max = 1)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/./MLSFunctions.R')
west_seeds[,1]
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(ref_seeds)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(ref_seeds)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
force(elos)
force(regs)
force(round)
force(schedule)
force(seeds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
force(schedule)
ncol(schedule)
ncol(schedule)
home_loc <- seeds[schedule[1,x], 1]
lapply(seq(1:ncol(schedule)), FUN = function(x){
home_loc <- seeds[schedule[1,x], 1]
away_loc <- seeds[schedule[2,x], 1]
home_elo <- elos[home_loc]
away_elo <- elos[away_loc]
home_regs <- regs[home_loc,]
away_regs <- regs[home_loc,]
if (home_elo >= away_elo){
score <- gamesim(home_elo,away_elo,home_regs,away_regs, TRUE)
}else{
score <- gamesim(away_elo,home_elo,away_regs,home_regs, FALSE)
}
score_diff <- score$home_goals - score$away_goals
elo_points <- eloadjust(home_elo, away_elo, score_diff, round)
elos[home_loc] <<- elos[home_loc] + elo_points
elos[away_loc] <<- elos[away_loc] - elo_points
if (score_diff > 0){
seeds <- seeds[-schedule[2,x],]
}else if (score_diff < 0){
seeds <- seeds[-schedule[1,x],]
}else{
home_win_exp <- 1/((10^((-(home_elo - away_elo + 100))/400)+1))
if (runif(1, min = 0 , max = 1) >= home_win_exp){
seeds <- seeds[-schedule[1,x],]
}else{
seeds <- seeds[-schedule[2,x],]
}
}
return()})
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/./MLSFunctions.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/./MLSFunctions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
west_seeds
vs
team_regs
ref_seeds
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(ref_seeds)
make_semis
View(ref_seeds)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$Make_Semis <- round(make_semis/num_sim,3)
View(season_odds)
sum(win_shield)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
season_odds$First_Round_Bye <- round(bye/num_sim, 3)
View(reg_tally)
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(current_elo)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
vs <- matrix(c(1,2), nrow = 2, ncol = 1)
View(vs)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
west_seeds
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSFunctions.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('~/.active-rstudio-document')
install.packages("reactable")
library(htmltools)
source('~/.active-rstudio-document')
setwd("C:/Users/BOSS COMPUTER/Desktop/Misc")
source('~/.active-rstudio-document')
View(tbl)
source('C:/Users/BOSS COMPUTER/Desktop/Misc/Tabletest.R')
source('C:/Users/BOSS COMPUTER/Desktop/Misc/Tabletest.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
setwd("C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLS Elo Histories")
setwd("C:/Users/BOSS COMPUTER/Desktop/MLS Project")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
adjusted_weight
View(team_regs)
View(teams)
View(teams)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
View(teams)
View(teams)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
goal_probs$Freq <- (goal_probs$Freq/num_sims)*100
plot_data <- ggplot(goal_probs, aes(x = home_res,y = away_res, fill = Freq)) +
geom_tile() +  xlab(paste(home_name, "Goals Scored")) + ylab(paste(away_name, " Goals Scored")) +
geom_text(aes(label=Freq))+
ggtitle(paste("Projected Scores for ", home_name, " vs ", away_name, " (", match_date_raw, ") ", sep = "")) +
scale_fill_gradient2(low = "white", high = "red", name = "% Chance") +
theme_minimal() #+ guide_legend()
score_matrix <- plot_data + stat_bin2d()
score_matrix
View(goal_probs)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
score_matrix
View(match_results)
goal_probs <- as.data.frame(table(match_results))
goal_probs$Freq <- (goal_probs$Freq/num_sims)*100
plot_data <- ggplot(goal_probs, aes(x = home_res,y = away_res, fill = Freq)) +
geom_tile() +  xlab(paste(home_name, "Goals Scored")) + ylab(paste(away_name, " Goals Scored")) +
geom_text(aes(label=Freq))+
ggtitle(paste("Projected Scores for ", home_name, " vs ", away_name, " (", match_date_raw, ") ", sep = "")) +
scale_fill_gradient2(low = "white", high = "red", name = "% Chance") +
theme_minimal() #+ guide_legend()
score_plot <- plot_data + stat_bin2d()
score_plot
View(goal_probs)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
plot_data <- ggplot(goal_probs, aes(x = home_goals,y = away_goals, fill = Freq)) +
geom_tile() +  xlab(paste(home_name, "Goals Scored")) + ylab(paste(away_name, " Goals Scored")) +
geom_text(aes(label=Freq))+
ggtitle(paste("Projected Scores for ", home_name, " vs ", away_name, " (", match_date_raw, ") ", sep = "")) +
scale_fill_gradient2(low = "white", high = "red", name = "% Chance") +
theme_minimal() #+ guide_legend()
score_plot <- plot_data + stat_bin2d()
score_plot
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
score_plot
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
View(teams)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
score_plot
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
View(teams)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/ScoreTable.R')
score_plot
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
View(reg_results)
test <- subset(reg_results, -c("Round","Final","Home_Score","Away_Score","Winner"))
reg_results <- subset(reg_results, select = -c("Round","Final","Home_Score","Away_Score","Winner"))
reg_results <- subset(reg_results, select = -c(Round, Final, Home_Score, Away_Score, Winner))
View(reg_results)
reg_results[,c("Home_Chance", "Away_Chance", "Tie")] <-  rbind(comp_reg_tally,future_reg_tally)
reg_tally <- round(rbind(comp_reg_tally,future_reg_tally)/num_sim,3)
reg_results[,c("Home_Chance", "Away_Chance", "Tie")] <-  reg_tally
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
View(teams)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
adjusted_weight <- case_when(years == 2018 ~ 25,
years == 2019 ~ 50,
years == 2020 ~ 75,
TRUE ~ 100)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSFunctions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSFunctions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/TeamRegressions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
reg_tally <- read.csv(reg_tally_loc, header = TRUE, fileEncoding="UTF-8-BOM",row.names = 1)
View(reg_tally)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(season_odds)
season_odds <- data.frame(Alt_Names = ref_names$Alt_Names)#read.csv(season_format_loc,header = TRUE, fileEncoding="UTF-8-BOM")
season_odds$Elo <- current_elo$Elo
season_odds$Conference <- teams$Conference
season_odds$Avg_Points <- avg_stats[,"Points"]
season_odds$Avg_Goal_Diff <- avg_stats[,"Goal_Diff"]
season_odds$Make_Playoffs <- round(make_playoffs/num_sim,3)
season_odds$First_Round_Bye <- round(bye/num_sim, 3)
season_odds$Win_Shield <- round(win_shield/num_sim,3)
season_odds$Make_Semis <- round(make_semis/num_sim,3)
season_odds$Make_Champ <- round(make_champ/num_sim,3)
season_odds$Make_Cup <- round(make_cup/num_sim,3)
season_odds$Win_Cup <- round(win_cup/num_sim,3)
View(season_odds)
write.csv(season_odds, save_odds_loc)
View(season_odds)
library.install("reticulate")
install.packages("reticulate")
season_odds <- read.csv( "./Output/SeasonOdds.csv", row.names = 1)
View(season_odds)
Sys.Date()
typeof(Sys.Date())
i = 1
categories[i], " Over Time.csv"
paste(categories[i], " Over Time.csv")
categories <- c("Make_Playoffs", "First_Round_Bye", "Win_Shield", "Make_Semis",
"Make_Champ","Make_Cup", "Win_Cup")
paste(categories[i], " Over Time.csv")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
paste("./Output/",categories[i], " Over Time.csv",
sep = "")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(season_odds)
View(old_cats)
old_cats[[1]]
paste("./Output/",categories[i], " Over Time.csv",
sep = ""), row.names = 1, header = FALSE
read.csv(paste("./Output/",categories[i], " Over Time.csv",
sep = ""), row.names = 1, header = FALSE)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
as.Date(last_date)
as.Date(last_date,date_format)
date_format <- "%m/%d/%Y"
as.Date(last_date,date_format)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
season_odds$categories[i]
View(season_odds)
categories[i]
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
as.character(current_cate, format = date_format)
as.character(current_date, format = date_format)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
View(current_cat)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
current_cat <-read.csv(cat_loc, fileEncoding="UTF-8-BOM", header = FALSE)
current_cat <- subset(current_cat, -1)
current_cat <-read.csv(cat_loc, fileEncoding="UTF-8-BOM", header = FALSE)
current_cat <- subset(current_cat, select = -1)
View(current_cat)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
current_cat <-read.csv(cat_loc, fileEncoding="UTF-8-BOM", header = FALSE)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
View(current_cat)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/OverTime.R')
source("./Data/MLSEloUpdater.R")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/Main.R')
source("./MLSEloUpdater.R")
source("./MLSEloUpdater.R")
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSElo.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSElo.R')
source("./MLSEloUpdater.R")
source("./TeamRegressions.R")
source("./MLSForecast.R")
View(season_odds)
source("./OverTime.R")
View(current_cat)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(comp_standings)
View(comp_reg_tally)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/./MLSFunctions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(reg_results)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(future_reg_games)
View(comp_reg_tally)
View(comp_reg_games)
View(comp_reg_games)
comp_reg_games <- filter(reg_results, reg_results$Final == FALSE || reg_results$Final == "False")
View(reg_results)
reg_results <- read.csv(reg_season_loc,header = TRUE, fileEncoding="UTF-8-BOM")
comp_reg_tally <- filter(reg_tally, reg_results$Final == TRUE  || reg_results$Final == "True")
View(comp_reg_tally)
comp_reg_games <- filter(reg_results, reg_results$Final == FALSE || reg_results$Final == "False")
View(team_regs)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
comp_reg_games <- filter(reg_results, reg_results$Final == FALSE | reg_results$Final == "False")
comp_reg_games <- filter(reg_results, reg_results$Final == TRUE | reg_results$Final == "True")
View(comp_reg_games)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(reg_results)
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
debugSource('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(refined_results)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/./MLSFunctions.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
View(comp_reg_tally)
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
source('C:/Users/BOSS COMPUTER/Desktop/MLS Project/MLSForecast.R')
installr()
libary(installr)
install.packages("installr")
install.packages("installr")
